import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner scn = new Scanner(System.in) ;
        int n = scn.nextInt() ;
        
        int ele[] = new int[n] ;
        
        // take input
        for( int i = 0 ; i < n ; i++ )
        {
            ele[i] = scn.nextInt() ;    
        }
        
        if(n <= 2)
        {
            System.out.println(n) ;
            return ;
        }
        
        int inc_ss[] = new int[n] ;
        int dec_ss[] = new int[n] ;
        inc_ss[0] = 1 ;
        dec_ss[n - 1] = 1 ; 
        
        // create increasing ele arr
        for( int i = 1 ; i < n ; i++ )
        {
            int max_len = 0 ;
            for( int j = i - 1; j >= 0 ; j-- )
            {
                if(inc_ss[j] > max_len && ele[j] <= ele[i] )
                {
                    max_len = inc_ss[j] ;
                }
            }
            inc_ss[i] = 1 + max_len ;
        }
        
        // create decreasing ele arr
        for( int i = n - 2 ; i >= 0 ; i-- )
        {
            int max_len = 0 ;
            for( int j = i + 1; j < n ; j++ )
            {
                if(dec_ss[j] > max_len && ele[j] <= ele[i] )
                {
                    max_len = dec_ss[j] ;
                }
            }
            dec_ss[i] = 1 + max_len ;
        }
        
        int max_bitonic_length = 0 ;
        // get max bitonic length
        for(int idx = 0 ; idx < n ; idx++ )
        {
            if(dec_ss[idx] + inc_ss[idx] > max_bitonic_length)
            {
                max_bitonic_length = dec_ss[idx] + inc_ss[idx] ;
            }
        }
     
        // when including both inc and dec 
        // element itself gets included 2 times
        System.out.println(max_bitonic_length - 1) ;
    }

}